version: '3.7'

volumes:
  bot-volume:
  redis-volume:
  postgres-volume:
  pgadmin-volume:


services:
  bot:
    container_name: ${COMPOSE_PROJECT_NAME}_bot
    build:
      context: ./
    command: bash -c "alembic upgrade head && python3 bot"
    volumes:
      - bot-volume:/app
    env_file:
      - .env
    depends_on:
      - redis
      - postgres

  redis:
    container_name: ${COMPOSE_PROJECT_NAME}_redis
    image: redis:alpine
    restart: unless-stopped
    volumes:
      - redis-volume:/var/lib/redis/
    ports:
      - 6379:6379

  postgres:
    container_name: ${COMPOSE_PROJECT_NAME}_postgres
    image: postgres:alpine
    restart: unless-stopped
    volumes:
      - postgres-volume:/var/lib/postgresql/data
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    healthcheck:
      test: pg_isready -U ${DB_USER} -d ${DB_NAME}
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - 5432:5432
    command:
      [
        "postgres",
        "-c",
        "log_statement=all",
        "-c",
        "log_min_duration_statement=1"
      ]

  pgadmin:
    image: dpage/pgadmin4
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_USER}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
      PGADMIN_CONFIG_SERVER_MODE: 'True'
    ports:
      - "5050:80"
    volumes:
      - pgadmin-volume:/var/lib/pgadmin/
